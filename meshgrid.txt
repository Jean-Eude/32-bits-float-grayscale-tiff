void meshgrid(const std::vector<double>& x, const std::vector<double>& y,
              std::vector<double>& X, std::vector<double>& Y) {
    int nx = x.size();
    int ny = y.size();

    X.resize(nx * ny);
    Y.resize(nx * ny);

    for (int i = 0; i < ny; ++i) {
        for (int j = 0; j < nx; ++j) {
            int idx = i * nx + j;
            X[idx] = x[j];     // copie de x sur chaque ligne
            Y[idx] = y[i];     // copie de y sur chaque colonne
        }
    }
}



Bien sûr ! Voici un exemple de sortie console que ton programme afficherait si tu utilises :

    une matrice ones(3, 4)

    cumsum(..., 1)

    cumsum(..., 2)

    un meshgrid(x, y) avec x = [1, 2, 3], y = [10, 20]

✅ Sortie attendue :

Ones:
1 1 1 1
1 1 1 1
1 1 1 1

Cumsum(..., 1):
1 1 1 1
2 2 2 2
3 3 3 3

Cumsum(..., 2):
1 2 3 4
1 2 3 4
1 2 3 4

X (meshgrid):
1 2 3
1 2 3

Y (meshgrid):
10 10 10
20 20 20
