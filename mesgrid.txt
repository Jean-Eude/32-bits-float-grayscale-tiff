#include <iostream>
#include <vector>

void meshgrid(const std::vector<double>& x, const std::vector<double>& y,
              std::vector<std::vector<double>>& X,
              std::vector<std::vector<double>>& Y) {
    size_t ny = y.size();
    size_t nx = x.size();

    // Redimensionner les matrices de sortie
    X.resize(ny, std::vector<double>(nx));
    Y.resize(ny, std::vector<double>(nx));

    for (size_t i = 0; i < ny; ++i) {
        for (size_t j = 0; j < nx; ++j) {
            X[i][j] = x[j];
            Y[i][j] = y[i];
        }
    }
}

int main() {
    // Exemple d'utilisation
    std::vector<double> x = {1, 2, 3};
    std::vector<double> y = {4, 5};

    std::vector<std::vector<double>> X, Y;
    meshgrid(x, y, X, Y);

    // Afficher les r√©sultats
    std::cout << "X:" << std::endl;
    for (const auto& row : X) {
        for (double val : row) {
            std::cout << val << " ";
        }
        std::cout << std::endl;
    }

    std::cout << "\nY:" << std::endl;
    for (const auto& row : Y) {
        for (double val : row) {
            std::cout << val << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}
